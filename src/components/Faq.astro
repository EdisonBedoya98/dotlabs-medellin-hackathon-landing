---
export interface Props {
  id: number;
  question: string;
  answer: string;
}

const { question, answer, id } = Astro.props;
---

<div id="faq">
  <div id={id.toString()} class="toggler flex justify-between cursor-pointer">
    <h1
      id={id.toString()}
      class="text-main font-bold text-xl md:text-2xl"
      aria-disabled="false"
    >
      {question}
    </h1>
    <span
      id={id.toString()}
      class={`toggleIcon-${id} text-main font-bold text-xl md:text-2xl`}>+</span
    >
  </div>
  <p id={`faq-${id}`} class="answer mt-5 hidden">
    {answer}
  </p>
  <div class="border-b border-slate-700 mt-5"></div>
</div>

<script>
  const toggle = (e: Event) => {
    const target = e.target as HTMLDivElement;
    const answer = document.getElementById(`faq-${target.id}`);
    const icon = document.querySelector(`.toggleIcon-${target.id}`);

    if (answer && icon) {
      answer.classList.toggle("hidden");
      icon.textContent = answer.classList.contains("hidden") ? "+" : "-";
    }
  };


  const togglers: NodeListOf<HTMLDivElement> | null =
    document.querySelectorAll(".toggler");
  for (const toggler of togglers) {
    toggler.addEventListener("click", toggle);
  }
</script>

<style>
  p {
    animation: appear-in 0.2s ease-in-out;
  }

  @keyframes appear-in {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }

    top {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
